// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos.proto
// Protobuf Java Version: 4.28.3

package com.rookmotion.rook_sdk_health_connect.proto;

/**
 * Protobuf type {@code DataSourcesProtoListWrapper}
 */
public  final class DataSourcesProtoListWrapper extends
    com.google.protobuf.GeneratedMessageLite<
        DataSourcesProtoListWrapper, DataSourcesProtoListWrapper.Builder> implements
    // @@protoc_insertion_point(message_implements:DataSourcesProtoListWrapper)
    DataSourcesProtoListWrapperOrBuilder {
  private DataSourcesProtoListWrapper() {
    dataSources_ = emptyProtobufList();
  }
  public static final int DATASOURCES_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.ProtobufList<com.rookmotion.rook_sdk_health_connect.proto.DataSourceProto> dataSources_;
  /**
   * <code>repeated .DataSourceProto dataSources = 1;</code>
   */
  @java.lang.Override
  public java.util.List<com.rookmotion.rook_sdk_health_connect.proto.DataSourceProto> getDataSourcesList() {
    return dataSources_;
  }
  /**
   * <code>repeated .DataSourceProto dataSources = 1;</code>
   */
  public java.util.List<? extends com.rookmotion.rook_sdk_health_connect.proto.DataSourceProtoOrBuilder> 
      getDataSourcesOrBuilderList() {
    return dataSources_;
  }
  /**
   * <code>repeated .DataSourceProto dataSources = 1;</code>
   */
  @java.lang.Override
  public int getDataSourcesCount() {
    return dataSources_.size();
  }
  /**
   * <code>repeated .DataSourceProto dataSources = 1;</code>
   */
  @java.lang.Override
  public com.rookmotion.rook_sdk_health_connect.proto.DataSourceProto getDataSources(int index) {
    return dataSources_.get(index);
  }
  /**
   * <code>repeated .DataSourceProto dataSources = 1;</code>
   */
  public com.rookmotion.rook_sdk_health_connect.proto.DataSourceProtoOrBuilder getDataSourcesOrBuilder(
      int index) {
    return dataSources_.get(index);
  }
  private void ensureDataSourcesIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.rookmotion.rook_sdk_health_connect.proto.DataSourceProto> tmp = dataSources_;
    if (!tmp.isModifiable()) {
      dataSources_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <code>repeated .DataSourceProto dataSources = 1;</code>
   */
  private void setDataSources(
      int index, com.rookmotion.rook_sdk_health_connect.proto.DataSourceProto value) {
    value.getClass();
  ensureDataSourcesIsMutable();
    dataSources_.set(index, value);
  }
  /**
   * <code>repeated .DataSourceProto dataSources = 1;</code>
   */
  private void addDataSources(com.rookmotion.rook_sdk_health_connect.proto.DataSourceProto value) {
    value.getClass();
  ensureDataSourcesIsMutable();
    dataSources_.add(value);
  }
  /**
   * <code>repeated .DataSourceProto dataSources = 1;</code>
   */
  private void addDataSources(
      int index, com.rookmotion.rook_sdk_health_connect.proto.DataSourceProto value) {
    value.getClass();
  ensureDataSourcesIsMutable();
    dataSources_.add(index, value);
  }
  /**
   * <code>repeated .DataSourceProto dataSources = 1;</code>
   */
  private void addAllDataSources(
      java.lang.Iterable<? extends com.rookmotion.rook_sdk_health_connect.proto.DataSourceProto> values) {
    ensureDataSourcesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, dataSources_);
  }
  /**
   * <code>repeated .DataSourceProto dataSources = 1;</code>
   */
  private void clearDataSources() {
    dataSources_ = emptyProtobufList();
  }
  /**
   * <code>repeated .DataSourceProto dataSources = 1;</code>
   */
  private void removeDataSources(int index) {
    ensureDataSourcesIsMutable();
    dataSources_.remove(index);
  }

  public static com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code DataSourcesProtoListWrapper}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper, Builder> implements
      // @@protoc_insertion_point(builder_implements:DataSourcesProtoListWrapper)
      com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapperOrBuilder {
    // Construct using com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>repeated .DataSourceProto dataSources = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.rookmotion.rook_sdk_health_connect.proto.DataSourceProto> getDataSourcesList() {
      return java.util.Collections.unmodifiableList(
          instance.getDataSourcesList());
    }
    /**
     * <code>repeated .DataSourceProto dataSources = 1;</code>
     */
    @java.lang.Override
    public int getDataSourcesCount() {
      return instance.getDataSourcesCount();
    }/**
     * <code>repeated .DataSourceProto dataSources = 1;</code>
     */
    @java.lang.Override
    public com.rookmotion.rook_sdk_health_connect.proto.DataSourceProto getDataSources(int index) {
      return instance.getDataSources(index);
    }
    /**
     * <code>repeated .DataSourceProto dataSources = 1;</code>
     */
    public Builder setDataSources(
        int index, com.rookmotion.rook_sdk_health_connect.proto.DataSourceProto value) {
      copyOnWrite();
      instance.setDataSources(index, value);
      return this;
    }
    /**
     * <code>repeated .DataSourceProto dataSources = 1;</code>
     */
    public Builder setDataSources(
        int index, com.rookmotion.rook_sdk_health_connect.proto.DataSourceProto.Builder builderForValue) {
      copyOnWrite();
      instance.setDataSources(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .DataSourceProto dataSources = 1;</code>
     */
    public Builder addDataSources(com.rookmotion.rook_sdk_health_connect.proto.DataSourceProto value) {
      copyOnWrite();
      instance.addDataSources(value);
      return this;
    }
    /**
     * <code>repeated .DataSourceProto dataSources = 1;</code>
     */
    public Builder addDataSources(
        int index, com.rookmotion.rook_sdk_health_connect.proto.DataSourceProto value) {
      copyOnWrite();
      instance.addDataSources(index, value);
      return this;
    }
    /**
     * <code>repeated .DataSourceProto dataSources = 1;</code>
     */
    public Builder addDataSources(
        com.rookmotion.rook_sdk_health_connect.proto.DataSourceProto.Builder builderForValue) {
      copyOnWrite();
      instance.addDataSources(builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .DataSourceProto dataSources = 1;</code>
     */
    public Builder addDataSources(
        int index, com.rookmotion.rook_sdk_health_connect.proto.DataSourceProto.Builder builderForValue) {
      copyOnWrite();
      instance.addDataSources(index,
          builderForValue.build());
      return this;
    }
    /**
     * <code>repeated .DataSourceProto dataSources = 1;</code>
     */
    public Builder addAllDataSources(
        java.lang.Iterable<? extends com.rookmotion.rook_sdk_health_connect.proto.DataSourceProto> values) {
      copyOnWrite();
      instance.addAllDataSources(values);
      return this;
    }
    /**
     * <code>repeated .DataSourceProto dataSources = 1;</code>
     */
    public Builder clearDataSources() {
      copyOnWrite();
      instance.clearDataSources();
      return this;
    }
    /**
     * <code>repeated .DataSourceProto dataSources = 1;</code>
     */
    public Builder removeDataSources(int index) {
      copyOnWrite();
      instance.removeDataSources(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:DataSourcesProtoListWrapper)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "dataSources_",
            com.rookmotion.rook_sdk_health_connect.proto.DataSourceProto.class,
          };
          java.lang.String info =
              "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0001\u0000\u0001\u001b";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper> parser = PARSER;
        if (parser == null) {
          synchronized (com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:DataSourcesProtoListWrapper)
  private static final com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper DEFAULT_INSTANCE;
  static {
    DataSourcesProtoListWrapper defaultInstance = new DataSourcesProtoListWrapper();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      DataSourcesProtoListWrapper.class, defaultInstance);
  }

  public static com.rookmotion.rook_sdk_health_connect.proto.DataSourcesProtoListWrapper getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<DataSourcesProtoListWrapper> PARSER;

  public static com.google.protobuf.Parser<DataSourcesProtoListWrapper> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

