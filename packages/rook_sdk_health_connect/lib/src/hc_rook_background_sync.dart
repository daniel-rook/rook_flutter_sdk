import 'package:rook_sdk_health_connect/src/platform/rook_sdk_health_connect_platform_interface.dart';

/// This class allows you to schedule an periodic background health data syncs.
class HCRookBackgroundSync {
  HCRookBackgroundSync._();

  /// Checks if background sync is already scheduled.
  static Future<bool> isScheduled() {
    return RookSdkHealthConnectPlatform.instance.isScheduled();
  }

  /// Listen to this stream to get updates when background sync scheduled state changes.
  ///
  /// Example:
  ///
  /// ```dart
  /// // 1.- Create a stream subscription
  /// StreamSubscription<bool>? streamSubscription;
  ///
  /// // 2.- Listen to stream
  /// streamSubscription = HCRookBackgroundSync.isScheduledUpdates.listen((isScheduled) {
  ///   // Update UI
  /// });
  ///
  /// // 3.- Stop listening to the stream
  /// streamSubscription?.cancel();
  /// ```
  @Deprecated(
      "This element is not in stable state yet. It may be renamed, changed or even removed in a future version.")
  static Stream<bool> get isScheduledUpdates {
    return RookSdkHealthConnectPlatform.instance.isScheduledUpdates;
  }

  /// Enables the background upload of summaries and events,
  /// before use this method is necessary to add a user id and request permissions.
  ///
  /// * [enableLogs] See the logs generated by this SDK.
  static Future<void> enableBackground({required bool enableNativeLogs}) {
    return RookSdkHealthConnectPlatform.instance.schedule(enableNativeLogs);
  }

  /// Disables the background upload of summaries and events.
  static Future<void> disableBackground() {
    return RookSdkHealthConnectPlatform.instance.cancel();
  }
}
