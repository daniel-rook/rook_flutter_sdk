// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos.proto
// Protobuf Java Version: 4.28.3

package io.tryrook.rook_sdk_samsung_health.proto;

/**
 * Protobuf type {@code DailyCaloriesProto}
 */
public  final class DailyCaloriesProto extends
    com.google.protobuf.GeneratedMessageLite<
        DailyCaloriesProto, DailyCaloriesProto.Builder> implements
    // @@protoc_insertion_point(message_implements:DailyCaloriesProto)
    DailyCaloriesProtoOrBuilder {
  private DailyCaloriesProto() {
  }
  public static final int BASAL_FIELD_NUMBER = 1;
  private double basal_;
  /**
   * <code>double basal = 1;</code>
   * @return The basal.
   */
  @java.lang.Override
  public double getBasal() {
    return basal_;
  }
  /**
   * <code>double basal = 1;</code>
   * @param value The basal to set.
   */
  private void setBasal(double value) {
    
    basal_ = value;
  }
  /**
   * <code>double basal = 1;</code>
   */
  private void clearBasal() {

    basal_ = 0D;
  }

  public static final int ACTIVE_FIELD_NUMBER = 2;
  private double active_;
  /**
   * <code>double active = 2;</code>
   * @return The active.
   */
  @java.lang.Override
  public double getActive() {
    return active_;
  }
  /**
   * <code>double active = 2;</code>
   * @param value The active to set.
   */
  private void setActive(double value) {
    
    active_ = value;
  }
  /**
   * <code>double active = 2;</code>
   */
  private void clearActive() {

    active_ = 0D;
  }

  public static io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code DailyCaloriesProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:DailyCaloriesProto)
      io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProtoOrBuilder {
    // Construct using io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>double basal = 1;</code>
     * @return The basal.
     */
    @java.lang.Override
    public double getBasal() {
      return instance.getBasal();
    }
    /**
     * <code>double basal = 1;</code>
     * @param value The basal to set.
     * @return This builder for chaining.
     */
    public Builder setBasal(double value) {
      copyOnWrite();
      instance.setBasal(value);
      return this;
    }
    /**
     * <code>double basal = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearBasal() {
      copyOnWrite();
      instance.clearBasal();
      return this;
    }

    /**
     * <code>double active = 2;</code>
     * @return The active.
     */
    @java.lang.Override
    public double getActive() {
      return instance.getActive();
    }
    /**
     * <code>double active = 2;</code>
     * @param value The active to set.
     * @return This builder for chaining.
     */
    public Builder setActive(double value) {
      copyOnWrite();
      instance.setActive(value);
      return this;
    }
    /**
     * <code>double active = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearActive() {
      copyOnWrite();
      instance.clearActive();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:DailyCaloriesProto)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "basal_",
            "active_",
          };
          java.lang.String info =
              "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
              "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto> parser = PARSER;
        if (parser == null) {
          synchronized (io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:DailyCaloriesProto)
  private static final io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto DEFAULT_INSTANCE;
  static {
    DailyCaloriesProto defaultInstance = new DailyCaloriesProto();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      DailyCaloriesProto.class, defaultInstance);
  }

  public static io.tryrook.rook_sdk_samsung_health.proto.DailyCaloriesProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<DailyCaloriesProto> PARSER;

  public static com.google.protobuf.Parser<DailyCaloriesProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

